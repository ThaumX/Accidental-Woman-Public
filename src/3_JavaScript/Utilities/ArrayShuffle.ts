/*
.          █████╗ ██████╗ ██████╗  █████╗ ██╗   ██╗
.         ██╔══██╗██╔══██╗██╔══██╗██╔══██╗╚██╗ ██╔╝
.         ███████║██████╔╝██████╔╝███████║ ╚████╔╝
.         ██╔══██║██╔══██╗██╔══██╗██╔══██║  ╚██╔╝
.         ██║  ██║██║  ██║██║  ██║██║  ██║   ██║
.         ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝

. ███████╗██╗  ██╗██╗   ██╗███████╗███████╗██╗     ███████╗
. ██╔════╝██║  ██║██║   ██║██╔════╝██╔════╝██║     ██╔════╝
. ███████╗███████║██║   ██║█████╗  █████╗  ██║     █████╗
. ╚════██║██╔══██║██║   ██║██╔══╝  ██╔══╝  ██║     ██╔══╝
. ███████║██║  ██║╚██████╔╝██║     ██║     ███████╗███████╗
. ╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝     ╚══════╝╚══════╝

.  Adds a shuffle function to the Array Prototype to reorder items in the array
*/

Object.defineProperty(Array.prototype, 'shuffle', {
      configurable : true,
      writable     : true,
      value() {
        for (var i = this.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            const temp = clone(this[i]);
            this[i] = clone(this[j]);
            this[j] = clone(temp);
        }
      }
    });



