:: controlBullseye [nobr map]

<<nobr>>
/*11:Hardware, 12:Electronics, 13:Toys, 14:Baby, 15:grocery*/
/*21:Houseware, 22:women1, 23:women2, 24:lingerie, 25:grocery*/
/*31:Houseware,32:Mens, 33:child, 34:Child, 35: grocery*/
/*41:Pharmacy, 42:Eyeglass, 43:barber, 44:custserve, 45:produce*/
/*for incoming from other map*/

<<include [[bullseyeNPCunloader]]>>

<<set ↂ.pc.status.inPublic = true>>
<<set ↂ.map.wxCover = []>>
/*sets variables to destination based on mapLoc coordinates - Note walk description is separate*/

<<mapProcessMove>>
<<addTime _mapTime>>

/* Wear shoes and coat */
<<set ↂ.pc.clothes.worn.shoes = "normal">>
<<set ↂ.pc.clothes.worn.coat = "normal">>

/*Check for Checkout*/
<<if ↂ.map.passage == "BEparking" && $cart.length > 0>>
  <<if $time[0] >= 16 && $time[0] <= 20>>/*shopping "rush-hour"*/
    <<set _tim = random(16,32)>>
  <<else>>
    <<set _tim = random(8,18)>>
  <</if>>
  <<addTime _tim>>
  <<if ↂ.flag.Prologue && !ↂ.flag.ProBoughtClothes>>
    <<set _questCheck = {panties: false, bra: false, top: false, bottom: false, dress: false}>>
    <<for _i = 0, _c = $cart.length; _i < _c; _i++>>
      <<set _gato = $cart[_i][1]>>
      <<switch _gato>>
        <<case "panties">>
          <<set _questCheck.panties = true>>
        <<case "bra">>
          <<set _questCheck.bra = true>>
        <<case "top">>
          <<set _questCheck.top = true>>
        <<case "bottom">>
          <<set _questCheck.bottom = true>>
        <<case "dress">>
          <<set _questCheck.dress = true>>
        <</switch>>
    <</for>>
  <</if>>
  <<set _price = setup.shop.cartTotalNumber()>>
  <<set _outcome = setup.shop.purchase()>>
  <<if _outcome === "no afford">>
    <<dialog 'Unable to Check Out!'>>@@.exp;After waiting in line at the register for@@ @@.monospace;.white;<<print _tim>>@@ @@.exp;minutes, and having everything rung up, it turned out that you couldn't afford it.<br><br>Your total came to@@ @@.money;<<mon>><<= _price>>@@@@.exp;, but you only have@@ @@.money;<<mon>><<= $AW.cash>>@@ @@.exp;to spend. Looks like you'd better put something back.@@<</dialog>>
    <<set ↂ.map.name = "Bullseye Customer Service">>
    <<set ↂ.map.imageName = "IMGBullseye">>
    <<set ↂ.map.passage = "BEcustserv">>
    <<set _eventList = []>>
    <<set _mapPCroom = "This area of the store is kind of depressing for some reason, so you try not to think about it.">>
    <<set $location = "Bullseye - Checkout">>
  <<elseif _outcome === "age">>
    <<set $location = "Bullseye - Checkout">>
    <<run setup.map.nav("bullseye","custserv")>>
  <<else>>
    <<if ↂ.flag.Prologue && !ↂ.flag.ProBoughtClothes>>
      <<if _questCheck.panties>>
        <<set ↂ.flag.ProClothingQuest.panties = true>>
      <</if>>
      <<if _questCheck.bra>>
        <<set ↂ.flag.ProClothingQuest.bra = true>>
      <</if>>
      <<if _questCheck.top>>
        <<set ↂ.flag.ProClothingQuest.top = true>>
      <</if>>
      <<if _questCheck.bottom>>
        <<set ↂ.flag.ProClothingQuest.bottom = true>>
      <</if>>
      <<if _questCheck.dress>>
        <<set ↂ.flag.ProClothingQuest.dress = true>>
      <</if>>
      <<if ↂ.flag.ProClothingQuest.panties>>
        <<if (ↂ.flag.ProClothingQuest.top && ↂ.flag.ProClothingQuest.bottom) || ↂ.flag.ProClothingQuest.dress>>
          <<set ↂ.flag.ProBoughtClothes = true>>
        <</if>>
      <</if>>
    <</if>>
    <<dialog 'Checked out from Bullseye!'>>@@.exp;After waiting in line at the register for@@ @@.monospace;.white;<<print _tim>> minutes@@@@.exp;, you successfully purchased everything in your cart.<br><br>After your membership discount, your total came to@@ <span class="money">₢<<= _price>></span>@@.exp;, leaving you with@@ @@.money;₢<<= $AW.cash>>@@ @@.exp;remaining.@@<</dialog>>
  <</if>>
<</if>>

/*determine local movement information

/*Determine current weather after time has passed*/
/*<<weatherCheck>>*/

/*Run some widgets to check for various situations like clothes getting wet etc. */
<<clothingEffect _movHour _movTime>>
<<mapExhibition _movHour _movTime>>
<<mapBodyFunction  _movHour _movTime>>
<<mapMiscFunction>> /*catch-all for other random items*/
<<mapPeople>> /*Allows adding standard NPCs to the location*/

/*EVENTS - selects possible NPC/big event based on several possibilities*/
<<set ↂ.map.mainEvent = 0>>
<<set ↂ.map.minorEvent = 0>>
<<mapMainEventSelect>>
<<if ↂ.map.mainEvent == 0>>
	<<mapMinorEventSelect>>
<</if>>

/*SET THE SCENE! Describes the scene, including potential NPCs*/
<<if ↂ.map.mainEvent != 0 || ↂ.map.minorEvent != 0>>
	<<set _eventAdd = ↂ.map.mainEvent + ↂ.map.minorEvent>>
	<<switch _eventAdd>>
	<<default>>
	<</switch>>
<</if>>
<<if $npc.active>>
	<<set _NPCsingle = $npc.roomview>>
<<else>>
	<<if ↂ.map.NPCactive>>
		<<set _NPCsingle = ↂ.map.NPCroomview>>
	<<else>>
		<<set _NPCsingle = 0>>
	<</if>>
<</if>>

<<setScene _mapDesc _NPCsingle $roomviewGroup "bullseye">>

/*forwarder to change passage*/

/*<<link "debug link continue">>*/
<<gotodev ↂ.map.passage>>
/*<</link>>*/
<</nobr>>

:: bullseyeNPCunloader [nobr hidden]

/*This is a janky way of removing map-based NPCs.
currently it's essentially a placeholder that pulls pharmacist*/
<<if $activeNPC.includes("n1002")>>
<<deactivateNPC "n1002">>
<</if>>