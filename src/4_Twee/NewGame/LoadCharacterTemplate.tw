:: LoadCharacterTemplate [nobr hidden startpage]

<div id="cardback" style="padding: 50px 50px 30px 100px;">
<div id="cunt">
@@.head2;Load A Character Template@@
<br><br>
@@.head3;W@@@@.handwriting;.white;elcome to the @@@@.ident;Character Template System@@@@.handwriting;.white;. This system is intended to allow you to create a @@@@.ident;Template@@@@.handwriting;.white; of your character. A character template contains all of the details about your character chosen during character creation. When loading a template, your choices for physical body, attractiveness preferences, personality traits, kinks, and mutations are loaded, and you are deposited on the "Name Your Character" page. Share templates with other players to try something new!@@
<br><br>
@@.quest;.white;''Instructions''<br>Use the file button below to browse for a file.@@ @@.quest;.import;This file must be in the .awt format!@@ @@.quest;.white;Once you have chosen your template file, click the load button to load your template. (Or [[cancel and return|characterCreate]].)@@
<br><br>
<input type=file id='templateupload' name='templateupload'>
<<button "LOAD">>
<<set _values = []>>
<<procS "Load Data">>
<<script>>
function processFile(e) {
    var file = e.target.result;
    let result;
    if (file && file.length) {
			try{
				result = setup.template.load(file);
			}
			catch(err){
				alert(`Error: File could not be decoded. Be sure to upload a valid accidental woman template (.awt) file. ${err.name}: ${err.message}.`);
			}
    }else{
			alert("Error: File could not be read!");
		}
    State.temporary.result = result;
}
function uploadButton(filename) {
	var reader = new FileReader();
	var textFile = filename;
	reader.readAsText(textFile);
	$(reader).on('load', processFile);
}
var cock = document.getElementById('templateupload').files[0];
uploadButton(cock);
<</script>>
<<procE>>
<<timed 500ms>>
<<if ndef _result || _result == "error">>
  <<replace "#cunt">>
    <center><span class="bad" style="font-size:1.2rem;">There was an error loading the supplied file.</span>
    <br><<button "RETURN">><<go "LoadCharacterTemplate">><</button>></center>
  <</replace>>
<<else>>
  <<replace "#cunt">>
    <center><span class="good" style="font-size:1.2rem;">Template successfully loaded.</span><br>
    Template created with version <<= _result.version>>, build <<= _result.build>><br>
    Starting Gender: <<if _result.start === 1>>MALE<<else>>FEMALE<</if>><br>
    <<button "CONTINUE">>
      <<go LoadCharacterTemplateB>>
    <</button>></center>
  <</replace>>
<</if>>
<</timed>>
<</button>><br><br>
</div>
</div>


:: LoadCharacterTemplateStrt [nobr hidden]


<div id="cardback" style="padding: 50px 50px 30px 100px;">
<div id="cunt">
@@.head2;Load A Character Template@@
<br><br>
@@.head3;W@@@@.handwriting;.white;elcome to the @@@@.ident;Character Template System@@@@.handwriting;.white;. This system is intended to allow you to create a @@@@.ident;Template@@@@.handwriting;.white; of your character. A character template contains all of the details about your character chosen during character creation. When loading a template, your choices for physical body, attractiveness preferences, personality traits, kinks, and mutations are loaded, and you are deposited on the "Name Your Character" page. Share templates with other players to try something new!@@
<br><br>
@@.quest;.white;''Instructions''<br>Use the file button below to browse for a file.@@ @@.quest;.import;This file must be in the .awt format!@@ @@.quest;.white;Once you have chosen your template file, click the load button to load your template. (Or [[cancel and return|Introduction]].)@@
<br><br>
<input type=file id='templateupload' name='templateupload'>
<<button "LOAD">>
<<set _values = []>>
<<procS "Load Data">>
<<script>>
function processFile(e) {
    var file = e.target.result;
    let result;
    if (file && file.length) {
			try{
				result = setup.template.load(file);
			}
			catch(err){
				alert(`Error: File could not be decoded. Be sure to upload a valid accidental woman template (.awt) file. ${err.name}: ${err.message}.`);
			}
    }else{
			alert("Error: File could not be read!");
		}
    State.temporary.result = result;
}
function uploadButton(filename) {
	var reader = new FileReader();
	var textFile = filename;
	reader.readAsText(textFile);
	$(reader).on('load', processFile);
}
var cock = document.getElementById('templateupload').files[0];
uploadButton(cock);
<</script>>
<<procE>>
<<timed 500ms>>
<<if ndef _result || _result == "error">>
  <<replace "#cunt">>
    <center><span class="bad" style="font-size:1.2rem;">There was an error loading the supplied file.</span>
    <br><<button "RETURN">><<go "LoadCharacterTemplate">><</button>></center>
  <</replace>>
<<else>>
  <<replace "#cunt">>
    <center><span class="good" style="font-size:1.2rem;">Template successfully loaded.</span><br>
    Template created with version <<= _result.version>>, build <<= _result.build>><br>
    Starting Gender: <<if _result.start === 1>>MALE<<else>>FEMALE<</if>><br>
    <<button "CONTINUE">>
      <<if _result.start === 1>><<set $AW.startMale = true>><<else>><<set $AW.startMale = false>><</if>>
      <<go LoadCharacterTemplateB>>
    <</button>></center>
  <</replace>>
<</if>>
<</timed>>
<</button>><br><br>
</div>
</div>


:: LoadCharacterTemplateB [nobr hidden]


<div id="cardback">
<<setPCportrait>>
<br><br><br><center>
<img data-passage="IMG-LoadingBounce" style="border-radius:8px;">
<br>
<<LoadingText>>
<br><br>
<<ctn>>I believe this is more interesting<br>than staring at a spinning circle or something...<</ctn>>
</center>
<div id="shit">...</div>
<<script>>
  setTimeout(() => aw.replace("#shit", "<<include [[LoadCharacterTemplateC]]>>"), 250);
<</script>>
</div>

:: LoadCharacterTemplateC [nobr hidden]


<<status>>
<<pcTotalATR>>
<<if aw.chad.allowed>>
	<<cInit>>
<</if>>
<<run setup.fert.goddessCheck()>>
<<run setup.fert.playerStatsCalc()>>
<<set ↂ.pc.status.arousal = 2>>
<<run setup.calc_energy_base()>>
<<set ↂ.pc.status.energy.max = ↂ.pc.body.energy>>
<<run setup.calcEnergyRate()>>
<<status 0>>
<<include [[DEFsemiNPC-Prologue]]>>


<<run setup.updatePlayerHistory()>>


/*<<updatePlayerHistory>>*/

<<set _num = $npcMax - setup.npc.ready.length>>
<<if _num > 0>>
	<<procS "generate NPCs">>
	<<generateNPC _num 0 0 50 0 [0,0] [0,0] [0,0] [0,0] 0 0>>
  <<run setup.fakeNPC.fillTo()>>
	<<procE>>
<</if>>

<<timed 100ms>>
<<run setup.npcSched.generate()>>
<<next>>
<<goto nameCharacterB>>
<</timed>>

