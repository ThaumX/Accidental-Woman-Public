:: JobWidgets [nobr widget]

<<widget "jobtest">>


<</widget>>

<<widget "setNewJob">>
<<silently>>
<<if ndef $args[0]>>
  <<set $AW.error += ", No arguments sent to job-setting function!">>
  <<run alert("Job not set, no arguments sent to job-setting function!")>>
<<elseif ndef $args[1]>>
  <<set $AW.error += ", Missing argument for job-setting function!">>
  <<run alert("Job not set, missing argument for job-setting function!")>>
<<else>>
  <<status 1>>
  <<switch $args[0]>>
    <<case "IS">>
      <<set $job.employer = "The Institute">>
      <<set $job.code = "IS">>
      <<set $job.skills = "Cleaning & Organization">>
      <<set $job.desc = "This job basically involves cleaning part of the large institute complex.">>
      <<set $PC.job = "services">>
      <<set $job.percept = 1>>
      <<set $sched.workTime = [40,[0,0,0,0],[8,0,17,0],[8,0,17,0],[8,0,17,0],[0,0,0,0],[8,0,17,0],[8,0,17,0]]>>
      <<set $sched.workDays = [8,false,true,true,true,false,true,true]>>
      <<set $job.rules.taskratio = [60,22,10,5,2,1]>>
      <<set $job.rules.tasks = 4>>
      <<set $job.rules.taskA = {type: "CL",DC: 8, retry: true, effect: 1, stress: 3, hap: 0, desc: ["emptying the trash","sweeping the hallways","vacuuming offices","mopping the hallways","cleaning windows"]}>>
      <<set $job.rules.taskB = {type: "CL",DC: 10, retry: true, effect: 1, stress: 5,hap: 0, desc: ["cleaning the bathroom","wiping down the urinals","cleaning the break room","dusting"]}>>
      <<set $job.rules.taskC = {type: "OG",DC: 10, retry: true, effect: 1, stress: 5, hap: 0, desc: ["putting away dishes","arranging the cleaning supplies","returning office items to where they belong"]}>>
      <<set $job.rules.taskD = {type: "OG",DC: 12, retry: false, effect: 1, stress: 8, hap: 0, desc: ["refilling toilet paper dispensers","refilling the hand sanitizer","stocking new paper towels"]}>>
      <<set $job.rules.taskE = {type: "CL",DC: 8, retry: false, effect: 2, stress: 8, hap: -2, desc: ["mopping up puke","flushing a stranded turd","scrubbing bathroom graffiti"]}>>
      <<set $job.rules.taskF = {type: "CL",DC: 14, retry: false, effect: 3, stress: 15, hap: -1, desc: ["mopping up a strange chemical spill","picking up broken glassware","emptying an overfull sharps bin"]}>>
      <<set $job.rules.worktime = [40,0,8,8,8,0,8,8]>>
      <<set $job.rules.breaktime = 60>>
      <<set $job.rules.strict = true>>
      /*set stats by starting rank*/
      <<if $args[1] == 0>>
        <<set $job.rules.cutoffs = [15,30,45,60,75]>>
        <<set $job.vacation.rate = 0>>
        <<set $job.vacation.ratePaid = 0>>
        <<set $job.sick.rate = 0>>
        <<set _pay = Math.round((7.5 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 0>>
        <<set $job.name = "Temporary Associate Janitorial Assistant">>
        <<set $job.rules.boss = "Jeb Cummings">>
      <<elseif $args[1] == 1>>
        <<set $job.rules.cutoffs = [20,35,50,65,80]>>
        <<set $job.vacation.rate = 4>>
        <<set $job.vacation.ratePaid = 0>>
        <<set $job.sick.rate = 4>>
        <<set _pay = Math.round((8 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 1>>
        <<set $job.name = "Associate Janitorial Assistant">>
        <<set $job.rules.boss = "Jeb Cummings">>
      <<elseif $args[1] == 2>>
        <<set $job.rules.cutoffs = [25,40,55,70,85]>>
        <<set $job.vacation.rate = 4>>
        <<set $job.vacation.ratePaid = 4>>
        <<set $job.sick.rate = 8>>
        <<set _pay = Math.round((9 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 2>>
        <<set $job.name = "Janitorial Assistant">>
        <<set $job.rules.boss = "Jeb Cummings">>
      <<else>>
        <<set $AW.error += ", bad rank value sent to job setting function">>
        <<run alert("Bad rank value sent to job setting function, setting to default.")>>
      <</if>>
    <<case "IT">>
      <<set $job.employer = "The Institute">>
      <<set $job.code = "IT">>
      <<set $job.skills = "Organization, Problem Solving, Cleaning">>
      <<set $job.desc = "This job is essentially organizing and setting up lab equipment for people several pay grades above you to use.">>
      <<set $PC.job = "SPERM">>
      <<set $job.percept = 5>>
      <<set $job.rules.taskratio = [30,15,23,20,10,2]>>
      <<set $job.rules.tasks = 4>>
      <<set $sched.workTime = [40,[8,0,17,0],[8,0,17,0],[8,0,17,0],[8,0,17,0],[8,0,17,0],[0,0,0,0],[0,0,0,0]]>>
      <<set $sched.workDays = [8,true,true,true,true,true,false,false]>>
      <<set $job.rules.taskA = {type: "OG",DC: 10, retry: true, effect: 1, stress: 3, hap: 0, desc: ["organizing gradiated glassware","bringing the correct lasers out of storage","pre-measuring hundreds of vials of regents","labeling sample containers"]}>>
      <<set $job.rules.taskB = {type: "OG",DC: 12, retry: true, effect: 1, stress: 5,hap: 0, desc: ["placing petri dishes in the correct sample fridge","catalog research notes","refilling electronic component bins","setting up the requested light filters"]}>>
      <<set $job.rules.taskC = {type: "PS",DC: 10, retry: false, effect: 2, stress: 5, hap: 0, desc: ["figuring out the best arrangement of requested chemicals","decyphering handwritten lab requests","choosing the correct microscope slides","running the autoclave"]}>>
      <<set $job.rules.taskD = {type: "CL",DC: 10, retry: true, effect: 1, stress: 8, hap: 0, desc: ["washing labratory glassware","cleaning other employees' used dishes and coffee mugs","wiping down table surfaces","polishing optical lenses"]}>>
      <<set $job.rules.taskE = {type: "CL",DC: 12, retry: true, effect: 1, stress: 8, hap: 0, desc: ["properly sanitizing surgical implements","disinfecting petri dishes","disposing of used needles and syringes"]}>>
      <<set $job.rules.taskF = {type: "PS",DC: 14, retry: false, effect: 2, stress: 10, hap: -1, desc: ["finding the services employee that hasn't been secretly dosed yet","covertly refilling the west wing second floor water cooler"]}>>
      <<set $job.rules.worktime = [40,8,8,8,8,8,0,0]>>
      <<set $job.rules.breaktime = 60>>
      <<set $job.rules.strict = true>>
      /*set stats by starting rank*/
      <<if $args[1] == 0>>
        <<set $job.rules.cutoffs = [20,35,50,65,80]>>
        <<set $job.vacation.rate = 4>>
        <<set $job.vacation.ratePaid = 0>>
        <<set $job.sick.rate = 4>>
        <<set _pay = Math.round((10 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 0>>
        <<set $job.name = "Temporary Associate Assistant Technician">>
        <<set $job.rules.boss = "Wesley Horton">>
      <<elseif $args[1] == 1>>
        <<set $job.rules.cutoffs = [25,40,55,70,85]>>
        <<set $job.vacation.rate = 4>>
        <<set $job.vacation.ratePaid = 4>>
        <<set $job.sick.rate = 8>>
        <<set _pay = Math.round((12 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 1>>
        <<set $job.name = "Associate Assistant Technician">>
        <<set $job.rules.boss = "Wesley Horton">>
      <<elseif $args[1] == 2>>
        <<set $job.rules.cutoffs = [30,45,60,75,90]>>
        <<set $job.vacation.rate = 0>>
        <<set $job.vacation.ratePaid = 8>>
        <<set $job.sick.rate = 8>>
        <<set _pay = Math.round((15 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 2>>
        <<set $job.name = "Assistant Technician">>
        <<set $job.rules.boss = "Wesley Horton">>
      <<else>>
        <<set $AW.error += ", bad rank value sent to job setting function">>
        <<run alert("Bad rank value sent to job setting function, setting to default.")>>
      <</if>>
    <<case "IB">>
      <<set $job.employer = "The Institute">>
      <<set $job.code = "IB">>
      <<set $job.skills = "Communication, Finance, Organization, Problem Solving">>
      <<set $job.desc = "This job is essentially working as a drone in the vast institute HR bureaucracy.">>
      <<set $PC.job = "Bcorps">>
      <<set $job.percept = 4>>
      <<set $job.rules.taskratio = [40,24,20,8,6,2]>>
      <<set $job.rules.tasks = 4>>
      <<set $sched.workTime = [40,[8,0,17,0],[8,0,17,0],[8,0,17,0],[8,0,17,0],[8,0,17,0],[0,0,0,0],[0,0,0,0]]>>
      <<set $sched.workDays = [8,true,true,true,true,true,false,false]>>
      <<set $job.rules.taskA = {type: "CM",DC: 9, retry: true, effect: 1, stress: 5, hap: 0, desc: ["sending email","filing tps reports","adding things to the calendar","reading email","reading performance reports"]}>>
      <<set $job.rules.taskB = {type: "FI",DC: 9, retry: true, effect: 1, stress: 5,hap: 0, desc: ["entering figures into a spreadsheet","fixing timecard math","calculating office supply expenditures","copying figures from one spreadsheet to another"]}>>
      <<set $job.rules.taskC = {type: "OG",DC: 9, retry: true, effect: 1, stress: 5, hap: 0, desc: ["filing paper copies","organizing order requests","attaching performance reviews to employee records","sorting receipts by date"]}>>
      <<set $job.rules.taskD = {type: "CM",DC: 12, retry: false, effect: 1, stress: 8, hap: -1, desc: ["watching training presentations","avoiding the impression that you are human","delivering a black envelope to an employee"]}>>
      <<set $job.rules.taskE = {type: "FI",DC: 12, retry: false, effect: 2, stress: 8, hap: -1, desc: ["denying compensation claims","rejecting expense vouchers"]}>>
      <<set $job.rules.taskF = {type: "PS",DC: 14, retry: false, effect: 2, stress: 10, hap: -1, desc: ["avoiding blame for a random problem"]}>>
      <<set $job.rules.worktime = [40,8,8,8,8,8,0,0]>>
      <<set $job.rules.breaktime = 60>>
      <<set $job.rules.strict = true>>
      /*set stats by starting rank*/
      <<if $args[1] == 0>>
        <<set $job.rules.cutoffs = [20,35,50,65,80]>>
        <<set $job.vacation.rate = 0>>
        <<set $job.vacation.ratePaid = 0>>
        <<set $job.sick.rate = 0>>
        <<set _pay = Math.round((9 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 0>>
        <<set $job.name = "Temporary Associate Office Clerk Assistant">>
        <<set $job.rules.boss = "Diane Titter">>
      <<elseif $args[1] == 1>>
        <<set $job.rules.cutoffs = [25,40,55,70,85]>>
        <<set $job.vacation.rate = 4>>
        <<set $job.vacation.ratePaid = 0>>
        <<set $job.sick.rate = 4>>
        <<set _pay = Math.round((10 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 1>>
        <<set $job.name = "Associate Office Clerk Assistant">>
        <<set $job.rules.boss = "Diane Titter">>
      <<elseif $args[1] == 2>>
        <<set $job.rules.cutoffs = [30,45,60,75,90]>>
        <<set $job.vacation.rate = 4>>
        <<set $job.vacation.ratePaid = 4>>
        <<set $job.sick.rate = 8>>
        <<set _pay = Math.round((12 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 2>>
        <<set $job.name = "Office Clerk Assistant">>
        <<set $job.rules.boss = "Diane Titter">>
      <<else>>
        <<set $AW.error += ", bad rank value sent to job setting function">>
        <<run alert("Bad rank value sent to job setting function, setting to default.")>>
      <</if>>
    <<default>>
      <<set $job.employer = "The Institute">>
      <<set $job.code = "IS">>
      <<set $job.skills = "Cleaning & Organization">>
      <<set $job.desc = "This job basically involves cleaning part of the large institute complex.">>
      <<set $PC.job = "services">>
      <<set $job.percept = 1>>
      <<set $sched.workTime = [40,[0,0,0,0],[8,0,17,0],[8,0,17,0],[8,0,17,0],[0,0,0,0],[8,0,17,0],[8,0,17,0]]>>
      <<set $sched.workDays = [8,false,true,true,true,false,true,true]>>
      <<set $job.rules.taskratio = [60,22,10,5,2,1]>>
      <<set $job.rules.tasks = 4>>
      <<set $job.rules.taskA = {type: "CL",DC: 8, retry: true, effect: 1, stress: 3, hap: 0, desc: ["emptying the trash","sweeping the hallways","vacuuming offices","mopping the hallways","cleaning windows"]}>>
      <<set $job.rules.taskB = {type: "CL",DC: 10, retry: true, effect: 1, stress: 5,hap: 0, desc: ["cleaning the bathroom","wiping down the urinals","cleaning the break room","dusting"]}>>
      <<set $job.rules.taskC = {type: "OG",DC: 10, retry: true, effect: 1, stress: 5, hap: 0, desc: ["putting away dishes","arranging the cleaning supplies","returning office items to where they belong"]}>>
      <<set $job.rules.taskD = {type: "OG",DC: 12, retry: false, effect: 1, stress: 8, hap: 0, desc: ["refilling toilet paper dispensers","refilling the hand sanitizer","stocking new paper towels"]}>>
      <<set $job.rules.taskE = {type: "CL",DC: 8, retry: false, effect: 2, stress: 8, hap: -2, desc: ["mopping up puke","flushing a stranded turd","scrubbing bathroom graffiti"]}>>
      <<set $job.rules.taskF = {type: "CL",DC: 14, retry: false, effect: 3, stress: 15, hap: -1, desc: ["mopping up a strange chemical spill","picking up broken glassware","emptying an overfull sharps bin"]}>>
      <<set $job.rules.worktime = [40,0,8,8,8,0,8,8]>>
      <<set $job.rules.breaktime = 60>>
      <<set $job.rules.strict = true>>
      /*set stats by starting rank*/
      <<if $args[1] == 0>>
        <<set $job.rules.cutoffs = [15,30,45,60,75]>>
        <<set $job.vacation.rate = 0>>
        <<set $job.vacation.ratePaid = 0>>
        <<set $job.sick.rate = 0>>
        <<set _pay = Math.round((7.5 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 0>>
        <<set $job.name = "Temporary Associate Janitorial Assistant">>
        <<set $job.rules.boss = "Jeb Cummings">>
      <<elseif $args[1] == 1>>
        <<set $job.rules.cutoffs = [20,35,50,65,80]>>
        <<set $job.vacation.rate = 4>>
        <<set $job.vacation.ratePaid = 0>>
        <<set $job.sick.rate = 4>>
        <<set _pay = Math.round((8 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 1>>
        <<set $job.name = "Associate Janitorial Assistant">>
        <<set $job.rules.boss = "Jeb Cummings">>
      <<elseif $args[1] == 2>>
        <<set $job.rules.cutoffs = [25,40,55,70,85]>>
        <<set $job.vacation.rate = 4>>
        <<set $job.vacation.ratePaid = 4>>
        <<set $job.sick.rate = 8>>
        <<set _pay = Math.round((9 * $AW.curBase)*4)>>
        <<set $job.rules.payrate = _pay / 4>>
        <<set $job.pay = Math.round($job.rules.payrate * $job.rules.worktime[0])>>
        <<set $job.stats.rank = 2>>
        <<set $job.name = "Janitorial Assistant">>
        <<set $job.rules.boss = "Jeb Cummings">>
      <<else>>
        <<set $AW.error += ", bad rank value sent to job setting function">>
        <<run alert("Bad rank value sent to job setting function, setting to default.")>>
      <</if>>
  <</switch>>
  <<set $job.choose = {}>>
  <<set $job.choose.effort = 2>>
  <<set $job.choose.focus = "none">>
  <<set $job.pay = 0>>
  <<set $job.loc = ["world","institute","main"]>>
  <<status 0>>
<</if>>
<</silently>>
<</widget>>
