:: mechWidget [widget nobr]

/*Updates sidebar, for use in button-link-timed*/
<<widget "updatebar">><<silently>>
<<replace "#story-banner">><<display "StoryBanner">><</replace>>
<<replace "#story-caption">><<display "StoryCaption">><</replace>>
<<replace "#right-ui-bar-body">><<display "StoryRightSidebar">><</replace>>
<</silently>><</widget>>

/*Interprets the current  $time variable, setting $time[0] and $time[1] for use elsewhere and printing to sidebar*/
<<widget "timeInterpret">>
<<silently>>
<<set _time = setup.timeDisp>>

<<if $time[0] >= 19 || $time[0] < 6 >>
	<<set _sym = "☽">>
<<else>>
	<<set _sym = "☼">>
<</if>>
<</silently>>@@.clock;<<print _time>><<print " ">><<print _sym>>@@\
<</widget>>

<<widget "openGrooming">>
<<replace "#awUIcontainer">><<include [[groomingMain]]>><</replace>>
<</widget>>

/*Widget displays current status of several variables, and color codes them*/
<<widget "pcStatus">>
<<if $PC.status.mindbreak>>
@@.red;<<print "mindbroken">>@@
<<else>>
<<if $PC.status.stress > 90>>
	@@.red;<<print "near breakdown">>@@
<<elseif $PC.status.stress > 75>>
	@@.red;<<print "extremely stressed">>@@
<<elseif $PC.status.stress > 60>>
	@@.yellow;<<print "stressed out">>@@
<<elseif $PC.status.stress > 40>>
	@@.white;<<print "stressed">>@@
<<elseif $PC.status.stress > 20>>
	@@.white;<<print "slightly stressed">>@@
<<else>>
	@@.green;<<print "relaxed">>@@
<</if>>
<<if $PC.status.fatigue == 0>>
	<<print ", ">>
	@@.white;<<print "Waking Up">>@@
<<elseif $PC.status.fatigue == 1 || $PC.status.fatigue == 2>>
	<<print ", ">>
	@@.green;<<print "Alert">>@@
<<elseif $PC.status.fatigue > 9>>
	<<print ", ">>
	@@.red;<<print "Very Sleepy">>@@
<<elseif $PC.status.fatigue > 7>>
	<<print ", ">>
	@@.orange;<<print "Sleepy">>@@
<<elseif $PC.status.fatigue > 5>>
	<<print ", ">>
	@@.yellow;<<print "Tired">>@@
<</if>>
<<if $PC.status.satisfaction < 50 && $PC.status.need > 4>>
	<<print ", ">>
	@@.red;<<print "Insanely Frustrated">>@@
<<elseif $PC.status.satisfaction < 50 && $PC.status.need > 2>>
	<<print ", ">>
	@@.red;<<print "Extremely Frustrated">>@@
<<elseif $PC.status.satisfaction < 50 && $PC.status.need > 0>>
	<<print ", ">>
	@@.yellow;<<print "Very Frustrated">>@@
<<elseif $PC.status.satisfaction < 25>>
	<<print ", ">>
	@@.yellow;<<print "Frustrated">>@@
<<elseif $PC.status.satisfaction < 50>>
	<<print ", ">>
	@@.white;<<print "Slightly Frustrated">>@@
<<elseif $PC.status.satisfaction > 80 && $PC.status.need == 0>>
	<<print ", ">>
	@@.green;<<print "Completely Satisfied">>@@
<</if>>
<<if $PC.status.alcohol != 0>>
	<<switch $PC.status.alcohol>>
	<<case -2>>
		<<print ", ">>
		@@.red;<<print "Severe Hangover">>@@
	<<case -1>>
		<<print ", ">>
		@@.yellow;<<print "Hangover">>@@
	<<case 1>>
		<<print ", ">>
		@@.white;<<print "Buzzed">>@@
	<<case 2>>
		<<print ", ">>
		@@.white;<<print "Tipsy">>@@
	<<case 3>>
		<<print ", ">>
		@@.white;<<print "Slightly Drunk">>@@
	<<case 4>>
		<<print ", ">>
		@@.yellow;<<print "Drunk">>@@
	<<case 5>>
		<<print ", ">>
		@@.red;<<print "Wasted">>@@
	<<case 6>>
		<<print ", ">>
		@@.red;<<print "Alcohol Poisoning">>@@
	<</switch>>
<</if>>
<<if $PC.status.drugs != 0>>
	<<switch $PC.status.drugs>>
	<<case -2>>
		<<print ", ">>
		@@.red;<<print "Severe Withdrawal">>@@
	<<case -1>>
		<<print ", ">>
		@@.yellow;<<print "Withdrawal">>@@
	<<case 1>>
		<<print ", ">>
		@@.white;<<print "Buzzed">>@@
	<<case 2>>
		<<print ", ">>
		@@.white;<<print "High">>@@
	<<case 3>>
		<<print ", ">>
		@@.yellow;<<print "Very High">>@@
	<<case 4>>
		<<print ", ">>
		@@.red;<<print "Overdose">>@@
	<<case 5>>
		<<print ", ">>
		@@.red;<<print "Deadly Overdose">>@@
	<</switch>>
<</if>>
<<set _temp = $PC.body.orgasm - $PC.status.pleasure>>
<<if _temp < 1>>
	<<print ", ">>
	@@.pink;<<print either("Cumming","Orgasming")>>@@
<<elseif _temp < 3>>
	<<print ", ">>
	@@.pink;<<print "About to Cum">>@@
<<elseif _temp < 7>>
	<<print ", ">>
	@@.pink;<<print "Getting Close to Orgasm">>@@
<<elseif _temp < 12>>
	<<print ", ">>
	@@.pink;<<print "Worked Up">>@@
<</if>>
<</if>>
<</widget>>

/*prints PC's mood based on anger, happiness, and sleep (for dreams)*/
<<widget "pcMood">>
<<if $PC.status.mindbreak>>
	@@.px18;.red;<<print "mindbroken">>@@
<<elseif $PC.status.alcohol > 5 || $PC.status.drugs > 4>>
	@@.px18;<<print "Unconscious">>@@
<<elseif $PC.status.sleep>>
	@@.px18;<<print "Sleeping">>@@
<<elseif $PC.status.anger > 7>>
	@@.px18;.red;<<print "Enraged">>@@
<<elseif $PC.status.anger > 4>>
	@@.px18;.red;<<print "Very Angry">>@@
<<elseif $PC.status.happy < -7>>
	@@.px18;.red;<<print "Very Depressed">>@@
<<elseif $PC.status.happy < -5>>
	@@.px18;.red;<<print "Depressed">>@@
<<elseif $PC.status.anger > 2>>
	@@.px18;.yellow;<<print "Angry">>@@
<<elseif $PC.status.anger > 0>>
	@@.px18;<<print "Irritated">>@@
<<elseif $PC.status.happy < -2>>
	@@.px18;.yellow;<<print "Sad">>@@
<<elseif $PC.status.happy > 7>>
	@@.px18;.green;<<print "Blissful">>@@
<<elseif $PC.status.happy > 5>>
	@@.px18;.green;<<print "Very Happy">>@@
<<elseif $PC.status.happy > 2>>
	@@.px18;<<print "Happy">>@@
<<else>>
	@@.px18;<<print "Neutral">>@@
<</if>>
<</widget>>

/*displays color-coded text on BC and cycle based on current variables*/
<<widget "cycleStatus">>
@@.px18;<<print "Birth Control: ">>@@
<<if $PC.status.birthCon != 0 && $PC.kink.pregnancy>>
  @@.px18;.orange;$PC.status.birthConType@@
<<elseif $PC.status.birthCon < 75 && $PC.trait.perceptive == 1>>
	@@.px18;.yellow;$PC.status.birthConType@@
<<elseif $PC.status.birthCon != 0>>
	@@.px18;.green;$PC.status.birthConType@@
<<else>>
	@@.px18;.pink;None@@
<</if>>
<br>
@@.px18;<<print "Cycle: ">>@@
<<if $PC.status.period != 0>>
  @@.px18;.pink;$PC.status.fertText@@
<<else>>
<<switch $PC.status.risk>>
	<<case 0>>
		@@.px18;.green;$PC.status.fertText@@
	<<case 1>>
		@@.px18;.yellowgreen;$PC.status.fertText@@
	<<case 2>>
		@@.px18;.yellow;$PC.status.fertText@@
	<<case 3>>
		@@.px18;.orange;$PC.status.fertText@@
	<<case 4>>
		@@.px18;.orangered;$PC.status.fertText@@
	<<case 5>>
		@@.px18;.red;$PC.status.fertText@@
<</switch>>
<</if>>
<</widget>>

/*
<<widget "setScene">>
<<silently>>
/*args list. 0 is player situation, 1 is npc, 2 is group, 3 is location
<<if ndef $args[3]>>
	<<set $sceneA = "There was an error. Please report this bug!">>
	<<set $sceneB = "Scene information was improperly set, insufficient data.">>
	<<set $sceneC = "Available Information:">>
	<<set $showDebug = true>>
	<<if ndef $args[0]>>
		<<set $sceneD = "None">>
	<<else>>
		<<set $sceneD = $args[0]>>
	<</if>>
	<<if ndef $args[1]>>
	<<else>>
		<<set $sceneD += $args[1]>>
	<</if>>
	<<if ndef $args[2]>>
	<<else>>
		<<set $sceneD += $args[2]>>
	<</if>>
<<elseif def $args[4]>>
	<<set $sceneA = "There was an error. Please report this bug!">>
	<<set $sceneB = "Scene information was improperly set, extra variable.">>
	<<set $sceneC = "Available Information:">>
	<<set $sceneD = $args[0] + " | " + $args[1] + " | " + $args[2] + " | " + $args[3] + " | " + $args[4]>>
	<<set $showDebug = true>>
<<else>>
	<<set $sceneA = $args[0]>>
	<<if $args[1] == 0>>
		<<set $sceneB = $args[1]>>
	<<elseif $args[1] == 1>>
		
	<<else>>
		<<set $sceneB = $activeNPC.name + " " + $args[1]>>
	<</if>>
	<<if $args[2] != 1>>
		<<set $sceneC = $args[2]>>
	<</if>>
	<<if $args[3] != 1>>
	<<set $sceneD = $args[3]>>
	<<switch $args[3]>>
	<<case "lily">>
		<<set $sceneD = "You are in Lily's home in Appletree. Lily's home is a townhouse located near Mainstreet and 2nd, and is very close to Appletree's shopping district. The first floor contains a spacious living room, a dining room, a half-bath, and a kitchen. Upstairs is the master bedroom with ensuite bath, guest bedroom, bathroom, and office. Downstairs is a basement that Lily converted into her own lab.">>
	<<case "townsquare">>
	<<case "downtown">>
	<<case "mainstreet">>
		<<set $sceneD = "You are on the main artery of Appletree, Shrodinger Boulevard. It's the main road that leads in and out of the Muschi Valley, a renamed section of state road. It passes by Bullseye on the northeastern side of the valley, and crosses west until it reaches Appletree. To the north of Shrodinger Boulevard is the area known as 'Downtown', while the area to the south is mostly residential. If you follow Shrodinger Boulevard west past town, it turns south and follows the western edge of the valley. Eventually you'll run into the Institute Complex, the reason Appletree was built in the first place.">>
	<<case "institute">>
	<<case "bullseye">>
		<<set $sceneD = "You are at Bullseye, a large nation-wide department store chain. They carry a little bit of everything, but if you're looking for something uncommon or high-quality you'll usually have to look elsewhere. Bullseye is considered the 'upscale' competitor to Bal*Mart, with a nicer appearance and slightly better customer service.<br><br>Interesting Trivia: Bullseye's original target logo had a brown--rather than blue--bullseye circle. In the 1990s, customers began refering to the store as 'Brown-Eye', leading to the redesign of the company's logo.">>
	<<case "t2home">>
		<<set $scendD = "You are in your modest apartment in Appletree.">>
	<</switch>>
	<</if>>
<</if>>
<</silently>>
<</widget>>
*/

/*<<widget "status">>\
<<silently>>
<<if ndef $args[0] || $args[0] == 0>>
<<set $runop = [($PC.trait.libido * 2.85),$PC.main.background,($PC.skill.exhibition * 2.85),($PC.skill.prostitute * 2.85),($PC.skill.sex * 2.85),($PC.skill.oral * 2.85),($PC.skill.seduction * 2.85),($PC.skill.comm * 2.85),($PC.skill.org * 2.85),($PC.skill.probSolving * 2.85),($PC.skill.finance * 2.85),($PC.skill.art * 2.85),($PC.skill.athletic * 2.85),($PC.skill.dancing * 2.85),($PC.skill.clean * 2.85),($PC.skill.shop * 2.85),($PC.skill.cook * 2.85),$PC.status.birthCon,$PC.status.birthConType,($PC.status.alcohol * 2.85),($PC.status.drugs * 2.85),($PC.status.wombA.weeks * 2.45),($PC.status.wombB.weeks * 2.45),($PC.status.milk * 2.45),($PC.status.arousal * 2.35),($PC.body.orgasm * 2.35),($PC.status.pleasure * 2.35),($PC.status.need * 3.15),($PC.status.satisfaction * 3.15),($PC.status.stress * 3.55),($PC.status.happy * 3.55),($PC.status.anger * 3.55),($PC.status.fatigue * 3.55),$PC.status.will,($AW.cash * 4.207),$PC.status.mindbreak,($PC.status.morality * 1.68),($PC.status.perversion * 1.68),($PC.status.lonely * 9.74),($PC.status.health * 6.96),($PC.status.addict.sex * 4.37),($PC.status.addict.alc * 4.37),($PC.status.addict.heat * 4.37),($PC.status.addict.satyr * 4.37),($PC.status.addict.focus * 4.37),($PC.status.addict.cum * 4.37),($PC.status.addict.zone * 4.37),($PC.status.addict.cream * 4.37)]>>
<<elseif $args[0] == 1>>
<<set $PC.trait.libido = Math.round( $runop[0] / 2.85 )>>
<<set $PC.main.background = $runop[1]>>
<<set $PC.skill.exhibition = Math.round( $runop[2] / 2.85 )>>
<<set $PC.skill.prostitute = Math.round( $runop[3] / 2.85 )>>
<<set $PC.skill.sex = Math.round( $runop[4] / 2.85 )>>
<<set $PC.skill.oral = Math.round( $runop[5] / 2.85 )>>
<<set $PC.skill.seduction = Math.round( $runop[6] / 2.85 )>>
<<set $PC.skill.comm = Math.round( $runop[7] / 2.85 )>>
<<set $PC.skill.org = Math.round( $runop[8] / 2.85 )>>
<<set $PC.skill.probSolving = Math.round( $runop[9] / 2.85 )>>
<<set $PC.skill.finance = Math.round( $runop[10] / 2.85 )>>
<<set $PC.skill.art = Math.round( $runop[11] / 2.85 )>>
<<set $PC.skill.athletic = Math.round( $runop[12] / 2.85 )>>
<<set $PC.skill.dancing = Math.round( $runop[13] / 2.85 )>>
<<set $PC.skill.clean = Math.round( $runop[14] / 2.85 )>>
<<set $PC.skill.shop = Math.round( $runop[15] / 2.85 )>>
<<set $PC.skill.cook = Math.round( $runop[16] / 2.85 )>>
<<set $PC.status.birthCon = $runop[17]>>
<<set $PC.status.birthConType = $runop[18]>>
<<set $PC.status.alcohol = Math.round( $runop[19] / 2.85 )>>
<<set $PC.status.drugs = Math.round( $runop[20] / 2.85 )>>
<<set $PC.status.wombA.weeks = Math.round( $runop[21] / 2.45 )>>
<<set $PC.status.wombB.weeks = Math.round( $runop[22] / 2.45 )>>
<<set $PC.status.milk = Math.round( $runop[23] / 2.45 )>>
<<set $PC.status.arousal = Math.round( $runop[24] / 2.35 )>>
<<set $PC.body.orgasm = Math.round( $runop[25] / 2.35 )>>
<<set $PC.status.pleasure = Math.round( $runop[26] / 2.35 )>>
<<set $PC.status.need = Math.round( $runop[27] / 3.15 )>>
<<set $PC.status.satisfaction = Math.round( $runop[28] / 3.15 )>>
<<set $PC.status.stress = Math.round( $runop[29] / 3.55 )>>
<<set $PC.status.happy = Math.round( $runop[30] / 3.55 )>>
<<set $PC.status.anger = Math.round( $runop[31] / 3.55 )>>
<<set $PC.status.fatigue = Math.round( $runop[32] / 3.55 )>>
<<set $PC.status.will = $runop[33]>>
<<set $AW.cash = Math.round( $runop[34] / 4.207 )>>
<<set $PC.status.mindbreak = $runop[35]>>
<<set $PC.status.morality = Math.round( $runop[36] / 1.68 )>>
<<set $PC.status.perversion = Math.round( $runop[37] / 1.68 )>>
<<set $PC.status.lonely = Math.round( $runop[38] / 9.74 )>>
<<set $PC.status.health = Math.round( $runop[39] / 6.96 )>>
<<set $PC.status.addict.sex = Math.round( $runop[40] / 4.37 )>>
<<set $PC.status.addict.alc = Math.round( $runop[41] / 4.37 )>>
<<set $PC.status.addict.heat = Math.round( $runop[42] / 4.37 )>>
<<set $PC.status.addict.satyr = Math.round( $runop[43] / 4.37 )>>
<<set $PC.status.addict.focus = Math.round( $runop[44] / 4.37 )>>
<<set $PC.status.addict.cum = Math.round( $runop[45] / 4.37 )>>
<<set $PC.status.addict.zone = Math.round( $runop[46] / 4.37 )>>
<<set $PC.status.addict.cream = Math.round( $runop[47] / 4.37 )>>
<</if>>
<<set $PC.status.addict.max = Math.max($PC.status.addict.sex,$PC.status.addict.alc,$PC.status.addict.heat,$PC.status.addict.satyr,$PC.status.addict.focus,$PC.status.addict.cum,$PC.status.addict.zone,$PC.status.addict.cream)>>
<</silently>>
<</widget>>*/

<<widget "addCmdItem">>
	<<set _exists = false>>
	<<for _i to 0; _i < $sidebarCmds.length; _i ++>>
		<<if $sidebarCmds[_i][0] == $args[0]>>
			<<set _exists = true>>
		<</if>>
	<</for>>
	<<if not _exists>>
		<<set $sidebarCmds.push([$args[0],$args[1]])>>
	<</if>>
<</widget>>

<<widget "removeCmdItem">>

<</widget>>

<<widget "achieve">>
<<silently>>
	<<set _add = $args[0]>>
	<<if $args.length > 1>>
		<<for _i = 1; _i < $args.length; _i++>>
			<<set _add += $args[_i]>>
		<</for>>
	<</if>>
	<<if $args.length < 1>>
		<<run alert("No args sent to achievement adder!")>>
	<<else>>
		<<if not $gamestate.achieve.includes(_add)>>
			<<set $gamestate.points += 1>>
			<<run $gamestate.achieve.push(_add)>>
		<</if>>
		<<run setup.storeState()>>
	<</if>>
  <<set _achimgprint = "<span id='achievWrap'><div id='achievement' class='bounceInDown animated'>[img[IMGachievement]]<br>" + _add + "</div><<timed 3000ms>><<animexit 'achievement' 'bounceInDown' 'bounceOutDown' 'achievWrap'>><</timed>></span>">>
<</silently>>
<<print _achimgprint>>
<</widget>>

<<widget "startSexScene">>
	<<silently>>
	<<if $args.length < 4>>
		<<run alert("Insufficient arguments sent to start sex scene widget!")>>
	<<else>>
		<<set $sex.start = true>>
		<<set $sex.startTime = $time>>
    <<set $sex.restoreAfter = []>>
		/*set situational orgasm moddifier - Currently DUMMY*/
		<<set $sex.situOrg = $args[0]>>
		<<if $args[1] == "all">>
			<<set $sex.activeNPC = $activeNPC>>
		<<else>>
      <<set _length = $activeNPC.length>>
			<<set _newActL = $args[1].length>>
      <<set _forSex = $args[1]>>
      <<if _newActL > _length>>
        <<set _msg = "DEBUG ERROR:\nrequested sex npcs (" + _newActL + ") is greater than activeNPCs (" + _length + ")!">>
        <<run alert(_msg)>>
      <</if>>
			<<set $sex.activeNPC = []>>
      <<for _i = _length - 1; _i >= 0; _i-->>
				<<if not _forSex.includes($activeNPC[_i])>>
          <<set $sex.restoreAfter.push($activeNPC[_i])>>
          <<deactivateNPC $activeNPC[_i]>>
        <</if>>
			<</for>>
			<<for _i = 0; _i < _newActL; _i++>>
				<<if not $activeNPC.includes(_forSex[_i])>>
          <<activateNPC _forSex[i]>>
        <</if>>
			<</for>>
      <<set $sex.activeNPC = clone($activeNPC)>>
		<</if>>
		<<if "string" != typeof $args[2]>>
			<<switch $args[2]>>
				<<case 0>>
					<<set $sex.pos = "standing">>
				<<case 1>>
					<<set $sex.pos = "sitting">>
				<<case 2>>
					<<set $sex.pos = "sidebysidebed">>
				<<case 3>>
					<<if def setup.pos.standing>>
						<<set _keys = Object.keys(setup.pos)>>
						<<set $sex.pos = either(_keys)>>
					<<else>>
						<<set $sex.pos = "standing">>
					<</if>>
				<<case default>>
					<<set $sex.pos = "standing">>
			<</switch>>
		<<else>>
			<<set $sex.pos = $args[2]>>
		<</if>>
		/*<<if "array" == typeof $args[3]>>*/
			<<set $sex.locTags = $args[3]>>
		/*<<else>>
			<<set $sex.locTags = ["none"]>>
			<<run alert("fuck! no location tags were sent to the sex scene. Report this cockup (with location), then pretend it's an empty room.")>>
		<</if>>*/
		<<set $sex.pcOutput = "none">>
		<<set $sex.npcOutput = "---">>
		<<if $args.length == 5>>
			<<set $sex.pcOutput = $args[4]>>
		<<elseif $args.length == 6>>
			<<set $sex.pcOutput = $args[4]>>
			<<set $sex.npcOutput = $args[5]>>
		<</if>>
		/*<<dialog "debug">>
			we have this shit here:<br>
			<<print $args[0]>>, <<print $args[1]>>, <<print $args[2]>>, <<print $args[3]>><br><br>
			<<print _temp>>, <<print $sex.activeNPC>>|| <<print $activeNPC>>
			<br>
			<br>
			[[sexSceneControl]]
		<</dialog>>*/
		<<goto [[SexSceneStart]]>>
	<</if>>
	<</silently>>
<</widget>>


/***********************************************/
/*      FERTILITY VARIABLE CALCULATOR          */
/***********************************************/
<<widget "calcPCfertility">>
<<silently>>
<<switch $PC.fert.fertility>>
	<<case 0>>
		<<set $PC.fert.egg = 1>>
		<<set $PC.fert.implant = 2>>
		<<set $PC.fert.vagHostile = random(12,14)>>
		<<set $PC.fert.period = 4>>
		<<set $PC.fert.wombHealth = 2>>
		<<set $PC.fert.multEgg = 1>>
		<<set $PC.fert.barren = true>>
		<<set $PC.fert.Fflag = ["barren"]>>
	<<case 1>>
		<<set $PC.fert.egg = 5>>
		<<set $PC.fert.implant = 7>>
		<<set $PC.fert.vagHostile = random(13,15)>>
		<<set $PC.fert.period = 6>>
		<<set $PC.fert.wombHealth = 1>>
		<<set $PC.fert.multEgg = 3>>
		<<set $PC.fert.Fflag = ["barely"]>>
	<<case 2>>
		<<set $PC.fert.egg = 10>>
		<<set $PC.fert.implant = 7>>
		<<set $PC.fert.vagHostile = random(14,16)>>
		<<set $PC.fert.period = 5>>
		<<set $PC.fert.multEgg = 10>>
	<<case 3>>
		<<set $PC.fert.egg = 14>>
		<<set $PC.fert.implant = 10>>
		<<set $PC.fert.vagHostile = random(15,17)>>
		<<set $PC.fert.period = 4>>
		<<set $PC.fert.multEgg = 15>>
	<<case 4>>
		<<set $PC.fert.egg = 17>>
		<<set $PC.fert.implant = 12>>
		<<set $PC.fert.vagHostile = random(16,18)>>
		<<set $PC.fert.period = 3>>
		<<set $PC.fert.multEgg = 18>>
	<<case 5>>
		<<set $PC.fert.egg = 20>>
		<<set $PC.fert.implant = 14>>
		<<set $PC.fert.vagHostile = random(17,19)>>
		<<set $PC.fert.period = 2>>
		<<set $PC.fert.multEgg = 22>>
	<<case 6>>
		<<set $PC.fert.egg = 23>>
		<<set $PC.fert.implant = 16>>
		<<set $PC.fert.vagHostile = random(18,20)>>
		<<set $PC.fert.period = 2>>
		<<set $PC.fert.multEgg = 28>>
	<<case 7>>
		<<set $PC.fert.egg = 26>>
		<<set $PC.fert.implant = 18>>
		<<set $PC.fert.vagHostile = random(20,25)>>
		<<set $PC.fert.period = 1>>
		<<set $PC.fert.wombHealth = -1>>
		<<set $PC.fert.multEgg = 36>>
		<<set $PC.fert.Fflag = ["fertStorm"]>>
	<<case 8>>
		<<set $PC.fert.egg = 30>>
		<<set $PC.fert.implant = 20>>
		<<set $PC.fert.vagHostile = random(26,30)>>
		<<set $PC.fert.period = 1>>
		<<set $PC.fert.wombHealth = -3>>
		<<set $PC.fert.multEgg = 50>>
		<<set $PC.fert.Fflag = ["goddess"]>>
<</switch>>
<<if $PC.mutate.multiple>>
	<<set $PC.fert.multEgg += 200>>
<</if>>
<<if $PC.mutate.cycle>>
  <<set $PC.fert.period = 1>>
<</if>>
<<if $PC.mutate.period>>
	<<set $PC.fert.period = 0>>
<</if>>
<<set $PC.fert.cycle = 31 - $PC.fert.fertility>>
<<if $PC.fert.cycle > 28>>
  <<set $PC.fert.cycle = 28>>
<<elseif $PC.fert.cycle < 23>>
  <<set $PC.fert.cycle = 23>>
<</if>>
<</silently>>
<</widget>>

<<widget "gotodev">>
<<set _pas = $args[0]>>
<<if $swim == "[dev]" && $AW.debugPause>>
  <<if ndef $args[1] || "number" != typeof $args[1]>>
  <<set _tim = "2000ms">>
  <<else>>
  <<set _tim = $args[1] + "ms">>
  <</if>>
  <<set _cunt = true>>
  @@.com;Debugging Pause (to check for errors) Automagically continuing in <<print _tim>>@@
  <br><br>
  @@.uibutton;<<button "Pause">><<set _cunt = false>><</button>>
  <<button "next passage">><<goto _pas>><</button>>@@
  <<timed _tim>>
  <<if _cunt>>
  <<goto _pas>>
  <</if>>
  <</timed>>
<<else>>
  <<goto _pas>>
<</if>>
<</widget>>